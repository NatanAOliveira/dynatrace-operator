// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// troubleshootFunc is an autogenerated mock type for the troubleshootFunc type
type troubleshootFunc struct {
	mock.Mock
}

type troubleshootFunc_Expecter struct {
	mock *mock.Mock
}

func (_m *troubleshootFunc) EXPECT() *troubleshootFunc_Expecter {
	return &troubleshootFunc_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: troubleshootCtx
func (_m *troubleshootFunc) Execute(troubleshootCtx *troubleshoot.troubleshootContext) error {
	ret := _m.Called(troubleshootCtx)

	var r0 error
	if rf, ok := ret.Get(0).(func(*troubleshoot.troubleshootContext) error); ok {
		r0 = rf(troubleshootCtx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// troubleshootFunc_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type troubleshootFunc_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - troubleshootCtx *troubleshoot.troubleshootContext
func (_e *troubleshootFunc_Expecter) Execute(troubleshootCtx interface{}) *troubleshootFunc_Execute_Call {
	return &troubleshootFunc_Execute_Call{Call: _e.mock.On("Execute", troubleshootCtx)}
}

func (_c *troubleshootFunc_Execute_Call) Run(run func(troubleshootCtx *troubleshoot.troubleshootContext)) *troubleshootFunc_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*troubleshoot.troubleshootContext))
	})
	return _c
}

func (_c *troubleshootFunc_Execute_Call) Return(_a0 error) *troubleshootFunc_Execute_Call {
	_c.Call.Return(_a0)
	return _c
}

type mockConstructorTestingTnewTroubleshootFunc interface {
	mock.TestingT
	Cleanup(func())
}

// newTroubleshootFunc creates a new instance of troubleshootFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newTroubleshootFunc(t mockConstructorTestingTnewTroubleshootFunc) *troubleshootFunc {
	mock := &troubleshootFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
