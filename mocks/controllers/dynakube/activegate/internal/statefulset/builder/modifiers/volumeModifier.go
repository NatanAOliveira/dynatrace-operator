// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	v1 "k8s.io/api/core/v1"
)

// volumeModifier is an autogenerated mock type for the volumeModifier type
type volumeModifier struct {
	mock.Mock
}

type volumeModifier_Expecter struct {
	mock *mock.Mock
}

func (_m *volumeModifier) EXPECT() *volumeModifier_Expecter {
	return &volumeModifier_Expecter{mock: &_m.Mock}
}

// getVolumes provides a mock function with given fields:
func (_m *volumeModifier) getVolumes() []v1.Volume {
	ret := _m.Called()

	var r0 []v1.Volume
	if rf, ok := ret.Get(0).(func() []v1.Volume); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]v1.Volume)
		}
	}

	return r0
}

// volumeModifier_getVolumes_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'getVolumes'
type volumeModifier_getVolumes_Call struct {
	*mock.Call
}

// getVolumes is a helper method to define mock.On call
func (_e *volumeModifier_Expecter) getVolumes() *volumeModifier_getVolumes_Call {
	return &volumeModifier_getVolumes_Call{Call: _e.mock.On("getVolumes")}
}

func (_c *volumeModifier_getVolumes_Call) Run(run func()) *volumeModifier_getVolumes_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *volumeModifier_getVolumes_Call) Return(_a0 []v1.Volume) *volumeModifier_getVolumes_Call {
	_c.Call.Return(_a0)
	return _c
}

type mockConstructorTestingTnewVolumeModifier interface {
	mock.TestingT
	Cleanup(func())
}

// newVolumeModifier creates a new instance of volumeModifier. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newVolumeModifier(t mockConstructorTestingTnewVolumeModifier) *volumeModifier {
	mock := &volumeModifier{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
