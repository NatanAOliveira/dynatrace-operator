// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	v1 "k8s.io/api/core/v1"
)

// volumeMountModifier is an autogenerated mock type for the volumeMountModifier type
type volumeMountModifier struct {
	mock.Mock
}

type volumeMountModifier_Expecter struct {
	mock *mock.Mock
}

func (_m *volumeMountModifier) EXPECT() *volumeMountModifier_Expecter {
	return &volumeMountModifier_Expecter{mock: &_m.Mock}
}

// getVolumeMounts provides a mock function with given fields:
func (_m *volumeMountModifier) getVolumeMounts() []v1.VolumeMount {
	ret := _m.Called()

	var r0 []v1.VolumeMount
	if rf, ok := ret.Get(0).(func() []v1.VolumeMount); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]v1.VolumeMount)
		}
	}

	return r0
}

// volumeMountModifier_getVolumeMounts_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'getVolumeMounts'
type volumeMountModifier_getVolumeMounts_Call struct {
	*mock.Call
}

// getVolumeMounts is a helper method to define mock.On call
func (_e *volumeMountModifier_Expecter) getVolumeMounts() *volumeMountModifier_getVolumeMounts_Call {
	return &volumeMountModifier_getVolumeMounts_Call{Call: _e.mock.On("getVolumeMounts")}
}

func (_c *volumeMountModifier_getVolumeMounts_Call) Run(run func()) *volumeMountModifier_getVolumeMounts_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *volumeMountModifier_getVolumeMounts_Call) Return(_a0 []v1.VolumeMount) *volumeMountModifier_getVolumeMounts_Call {
	_c.Call.Return(_a0)
	return _c
}

type mockConstructorTestingTnewVolumeMountModifier interface {
	mock.TestingT
	Cleanup(func())
}

// newVolumeMountModifier creates a new instance of volumeMountModifier. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newVolumeMountModifier(t mockConstructorTestingTnewVolumeMountModifier) *volumeMountModifier {
	mock := &volumeMountModifier{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
